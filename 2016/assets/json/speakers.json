{
  "speakers": [
    {
      "enabled": "1",
      "name": "Rob Davies",
      "description": "Director for xPaaS Engineering at Red Hat",
      "biography": "Rob Davies is the Director for xPaaS Engineering at Red Hat. With 20 years experience of architecting solutions and developing products for large-scale distributed applications for telcos and finance, Rob is focusing on developing the next generation of open source middleware products. Rob is the founder of ActiveMQ and ServiceMix, and contributor to Apache Camel and Fabric8.",
      "image": "assets/img/speakers/rob-davies.jpg",
      "ref": "rdavies",
      "url": "infoSpeaker.html?ref=rdavies",
      "twitter": "https://twitter.com/rajdavies",
      "talk": {
        "title": "Messaging and Microservices",
        "abstract": "Microservices sometimes need more than REST for scaling and performance and Message-oriented Middleware seems like an ideal fit. However, traditional Enterprise Message Brokers are pretty static, and are poor at providing the elasticity required for cloud deployments. This talk will walk through some scenarios and different deployments, adding automatic sharding across clusters of brokers and sprinkle with magic from fabric8 - to show we can have a highly scalable cloud based messaging solution ideal for microservices.",
        "tags": [
          "Microservices", "Messaging"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Christian Posta",
      "description": "Principal Middleware Architect @ RedHat",
      "biography": "Principal Middleware Specialist/Architect at Red Hat and well known for being a frequent blogger, speaker, open-source enthusiast.  He is a committer to Apache Camel, ActiveMQ and contributor to Kafka, Fabric8, others. Christian has spent a great deal of time working with large companies creating and deploying large scale distributed architectures - many of what are now called Microservices based. He enjoys mentoring, training and leading teams to be successful with distributed systems concepts, microservices, devops, and cloud-native application design.",
      "image": "assets/img/speakers/christian-posta.jpg",
      "ref": "cposta",
      "url": "infoSpeaker.html?ref=cposta",
      "twitter": "https://twitter.com/christianposta",
      "talk": {
        "title": "Cloud Native Camel riding with Kubernetes and OpenShift",
        "abstract": "Microservices is still a distributed-systems problem and integration is a core component to any distributed system. A lot of organizations that are looking to deploy microservices are running into the following problems: how to test, how to deploy, VM proliferation, how to manage, and ultimately how to get services to integrate in a reliable way. Fuse Integration Services for OpenShift is a Docker/Kubernetes-native way of packaging our microservices and leveraging powerful integration technology built on Apache Camel to do connect the pieces together. After that, how do you build, manage and continuously deploy your microserivces? With another open-source project, fabric8.io, we can hook into well-known CI/CD tools like github, jenkins, nexus, et al, and build out end to end  pipelines with promotion and approval processes that can be customized to suit your projects and organizations needs. CI/CD also integrates with LetsChat/Slack/Ryver using Hubot automation to deliver transparency and control to enable organizations to practice ChatOps. Once you've got your microservices being built and deployed, leverage the built-in API Management, middleware visualization console, chaos monkey, and centralized logging/metrics/monitoring to operationalize your services and ensure they stay resilient.",
        "tags": [
          "Microservices", "Cloud", "Docker", "Kubernetes"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Maciej Swiderski",
      "description": "Principal software engineer at JBoss",
      "biography": "Maciej is principal software engineer at JBoss working as core developer of jBPM. Since 2007 he is in BPM domain both from development point of view and helping to adopt BPM in different sectors. He's passionate about open source and tries to promote it wherever possible. In his spare time he enjoys calm and relax life on country side and travels.",
      "image": "assets/img/speakers/maciej-swiderski.png",
      "ref": "mswiderski",
      "url": "infoSpeaker.html?ref=mswiderski",
      "talk": {
        "title": "Knowledge driven micro services",
        "abstract": "With constantly growing business demands more and more focus is put on gathering business knowledge and making use of it in IT. Knowledge Is Everything - that’s a slogan that lots of business domains is catching up right now.On the other hand, recent trends in software development are shifting into micro services environments where loosely coupled, standalone and independent services provide access to various business assets. With that in mind, knowledge driven micro service idea came into live to combine couple of great technologies together to satisfy such needs:- vert.x - toolkit for building reactive applications on JVM- jBPM and Drools flexible process and rule engines that provide excellent execution environment for business assets - the knowledge- hazelcast - in memory data grid- various programming languages (Java, JavaScript, Scala, Groovy) to attract various development teams. This session is about illustrating how easily and fast you can build knowledge driven micro services and scale them to almost no limits. All in reactive and polyglot fashion with powerful clustering. Scale individual knowledge micro services without a hassle and allow various languages to easily interact with business knowledge without a need to know where they are located. It all goes via clustered event bus provided by Vert.x, backed by deployable knowledge archives provided by jBPM and Drools, clustering delivered by hazelcast data grid and allow polyglot client side access.It’s all about business knowledge that can be delivered as software solution with:- flexibility - speed of development - isolated scalability - manageability . Come and see how to transform your IT solutions into knowledge driven micro services with Vert.x, jBPM, Drools and Hazelcast. This session will be full of life demos to actually show the running micro services driven by business knowledge.",
        "tags": [
          "Microservices", "Design", "Vert.x", "jBPM"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Milen Dyankov",
      "description": "Senior Consultant at Liferay.",
      "biography": "Personally - passionate about designing and building software as well as helping others design and build good software!                     Professionally - senior consultant at Liferay assisting some of the biggest European companies succeed in today's rapidly changing virtual reality by engaging their customers, partners, and employees.                     Technically - uses mostly Java to build modular solutions that adapts to business requirements",
      "image": "assets/img/speakers/milen-dyankov.jpg",
      "ref": "mdyankov",
      "url": "infoSpeaker.html?ref=mdyankov",
      "twitter": "https://twitter.com/milendyankov",
      "talk": {
        "title": "What's NOT new in Modular Java!",
        "abstract": "With Java 9 and Jigsaw project around the corner (this time apparently for real), we finally need to stop pretending we can simply ignore the concept of modularity in Java! The thing is - modularity is NOT just some new framework! Neither it is a simple set of APIs! It's a complex concept that has been around for almost as long as the industry itself. So in this talk I'd like to take a step back and reason about the fundamental idea of modularity in Java by comparing the concepts of Jigsaw with other Java modularity approaches and implementations that have been around for quite some time.",
        "tags": [
          "Modularity", "Java9"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Sean P. Floyd",
      "description": "Full-stack developer at Zalando",
      "biography": "Full-stack Java / Scala developer with ~20 years of experience. High level architect, low level hacker.",
      "image": "assets/img/speakers/sean-floyd.png",
      "ref": "sfloyd",
      "url": "infoSpeaker.html?ref=sfloyd",
      "twitter": "https://twitter.com/oldjavaguy",
      "talk": {
        "title": "Advanced testing patterns in Java and Scala",
        "abstract": "Not your father's unit testing. This talk will deal with advanced testing techniques like parameterized testing, property testing, dynamic test generation. It will also focus on techniques for making seemingly untestable code testable. I'll show techniques for both Java and Scala, along with hints on how to integrate the two.",
        "tags": [
          "Testing", "Scala", "Patterns"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Jean Baptiste Onofre",
      "description": "Apache Member, PMC Chair of Karaf",
      "biography": "JB is Apache Member, PMC Chair of Karaf, and working on about 20 Apache projects.",
      "image": "assets/img/speakers/jbonofre.jpg",
      "ref": "jbonofre",
      "url": "infoSpeaker.html?ref=jbonofre",
      "twitter": "https://twitter.com/jbonofre",
      "talk": {
        "title": "Apache Beam to design your data pipelines",
        "abstract": "Instead of directly implementing your data processing jobs using MapReduce or Spark, you can abstract by using Apache Beam. It provides a very convenient SDK allowing you to design pipelines working in stream or batch mode.",
        "tags": [
          "DB", "NoSQL"
        ],
        "level": "Beginner"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Viktor Farcic",
      "description": "Senior Consultant at CloudBees",
      "biography": "Viktor Farcic is a Senior Consultant at CloudBees.He coded using a plethora of languages starting with Pascal (yes, he is old), Basic (before it got Visual prefix), ASP (before it got .Net suffix), C, C++, Perl, Python, ASP.Net, Visual Basic, C#, JavaScript, etc. He never worked with Fortran. His current favorites are Scala and JavaScript even though most of his office hours are spent with Java.His big passions are Microservices, Continuous Integration, Delivery and Deployment (CI/CD) and Test-Driven Development.He often speaks at community gatherings and conferences.He wrote the 'Test-Driven Java Development' and 'The DevOps 2.0 Toolkit: Automating the Continuous Deployment Pipeline with Containerized Microservices' books.",
      "image": "assets/img/speakers/vfarcic.jpg",
      "ref": "vfarcic",
      "url": "infoSpeaker.html?ref=vfarcic",
      "twitter": "https://twitter.com/vfarcic",
      "talk": {
        "title": "Continuously Deploying Microservices",
        "abstract": "The chances are that you already tried Docker. You probably started by running one of the images from Docker Hub. The ease of use led you to experiment writing your own Dockerfile and building images from it. You tried Docker Compose. You might have realized benefits Docker provides in conjunction with microservices. Hopefully, you already deployed a container or two to production or, at least, recognized the advantages it brings to development, testing, integration and other environments and phases. All those pieces are necessary requirements for the 'real deal'. The final objective is to combine quite a few processes and technologies that will allow us to create a deployment pipeline. Docker makes it possible to reach nirvana. The world many thought is far from reality. The world where the last thing we do is run git push. From thereon, a machine takes over, and few minutes later our software is tested, built, deployed to production, and what so not. Let's see how that nirvana looks like. Let's explore which steps are required for a fully automated continuous deployment pipeline combined with microservices, and Docker containers.",
        "tags": [
          "Microservices", "CD"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Claus Ibsen",
      "description": "Principal software engineer from Red Hat",
      "biography": "Claus Ibsen is a principal software engineer from Red Hat. Claus is working full time on open source integration projects such as Apache Camel, fabric8, hawtio. He is also involved with container projects such as Kubernetes and OpenShift3. Claus is author of the Camel in Action books. Currently busy writing the 2nd edition.",
      "image": "assets/img/speakers/cibsen.jpg",
      "ref": "cibsen",
      "url": "infoSpeaker.html?ref=cibsen",
      "twitter": "https://twitter.com/davsclaus",
      "talk": {
        "title": "Developing Java based microservices ready for the world of containers",
        "abstract": "The so-called experts are saying microservices and containers will change the way we build, maintain, operate, and integrate applications. This talk is intended for Java developers who wants to hear and see how you can develop Java microservices that are ready to run in containers. In this talk we will build a set of Java based microservices that uses a mix of technologies with:- Apache Camel with CDI - Spring Boot - Vert.x - WildFly Swarm . You will see how we can build small discrete microservices with these Java technologies and build and deploy on the Kubernets/OpenShift3 container platform. We will discuss practices how to build distributed and fault tolerant microservices using technologies such as Kubernetes Services, Camel EIPs, Netflixx Hysterix, and Ribbon. We will use Zipkin service tracing across all four Java based microservices to provide a visualization of timings and help highlight latency problems in our mesh of microservices. And the self healing and fault tolerant aspects of the Kubernetes/OpenShift3 platform is also discussed and demoed when we let the chaos monkeys loose killing containers. This talk is a 50/50 mix between slides and demo.",
        "tags": [
          "Microservices", "Containers"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Esther Lozano",
      "description": "Software Engineer at Autentia",
      "biography": "Esther Lozano works as Software Engineer in Autentia since 2015, mainly as Java backend developer. However, this has not always been her role. After getting her degree in Computer Science, she suddenly woke up into a PhD program about Semantic Web and ontologies - because who doesn't, right? She successfully finished her research in 2015, but by then she had already made her mind about pursuing a more technical career. So she rolled an ability check, paid some hope points, and... hooray! She epically made it into professional development.",
      "image": "assets/img/speakers/elozano.png",
      "ref": "elozano",
      "url": "infoSpeaker.html?ref=elozano",
      "twitter": "https://twitter.com/esloho",
      "talk": {
        "title": "Geb+Spock: let your functional tests live long and prosper",
        "abstract": "Functional testing, as any other testing, is important to ensure the health of our apps. However, functional tests are often tricky, too susceptible to change, and their maintenance ends up being a nightmare. Are we hopeless then? Not at all! Luckily, there are tools to ease this task like Geb and Spock, which help us to create well structured, comprehensive, and easy to maintain tests. In this talk we will review these tools, showing different options for creating the tests. Demo included!",
        "tags": [
          "Testing", "Geb", "Spock"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Simon Ritter",
      "description": "CTO of Azul Systems",
      "biography": "Simon Ritter is the Deputy CTO of Azul Systems.  Simon has been in the IT business since 1984 and holds a Bachelor of Science degree in Physics from Brunel University in the U.K. Simon joined Sun Microsystems in 1996 and spent time working in both Java development and consultancy.  He has been presenting Java technologies to developers since 1999 focusing on the core Java platform as well as client and embedded applications.  Now at Azul Systems he continues to help people understand Java and Azul’s JVM products.",
      "image": "assets/img/speakers/simon-ritter.jpg",
      "ref": "sritter",
      "url": "infoSpeaker.html?ref=sritter",
      "twitter": "https://twitter.com/speakjava",
      "homepage": "http://www.azul.com",
      "talk": {
        "title": "JDK 8: Lessons Learnt With Lambdas and Streams",
        "abstract": "Lambda expressions and the streams API add a more functional style of programming to Java; something developers have not really had in the past. This session will start with a short summary of the key features of both Lambda expressions and streams before moving on to some real world examples of how to use them effectively, including a number of lessons learnt from trying to apply an imperative style of programming when it should have been functional. We’ll move on to a discussion about the way parallel streams work under-the-hood, factors that affect parallel stream performance including details of when not to use a parallel stream. We'll finish off with a quick look at some of the ideas for improvements to streams in JDK 9.",
        "tags": [
          "Java8", "FunctionalProgramming", "Java9", "Performance", "Lambdas"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Tugdual Grall",
      "description": "Chief Technical Evangelist for EMEA at MapR",
      "biography": "Tugdual Grall is Chief Technical Evangelist for EMEA at MapR, an open source advocate and a passionate developer. He currently works with the European developer communities to ease MapR, Hadoop and NoSQL adoption. Before joining MapR, Tug was Technical Evangelist at MongoDB and Couchbase. Tug has also worked as CTO at eXo Plaform and JavaEE product manager, and software engineer at Oracle. Tugdual is Co-Founder of the Nantes JUG (Java User Group) that holds since 2008 monthly meeting about Java ecosystem.",
      "image": "assets/img/speakers/tgrall.png",
      "ref": "tgrall",
      "url": "infoSpeaker.html?ref=tgrall",
      "twitter": "https://twitter.com/tgrall",
      "homepage": "http://tgrall.github.io/",
      "talk": {
        "title": "Fast Cars, Big Data - How Streaming Can Help Formula 1",
        "abstract": "Modern cars produce data. Lots of data. And Formula 1 cars produce more than their share. I will present a working demonstration of how modern data streaming can be applied to the data acquisition and analysis problem posed by modern motorsports. Instead of bringing multiple Formula 1 cars to the talk, I will show how we instrumented a high fidelity physics-based automotive simulator to produce realistic data from simulated cars running on the Spa-Francorchamps track. We move data from the cars, to the pits, to the engineers back at HQ. The result is near real-time visualization and comparison of performance and a great exposition of how to move data using messaging systems like Kafka. The code from this talk will be made available as open source.",
        "tags": [
          "Bigdata", "real-time", "Performance", "Messaging"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Laurent Doguin",
      "description": "Developer Advocate at Couchbase",
      "biography": "Laurent is a Paris based Developer Advocate where he focuses on helping Java developers and the French community. He writes code in Java and blog posts in Markdown. Prior to joining Couchbase he was Nuxeo’s community liaison where he devoted his time and expertise to helping the entire Nuxeo Community become more active and efficient.",
      "image": "assets/img/speakers/ldoguin.jpg",
      "ref": "ldoguin",
      "url": "infoSpeaker.html?ref=ldoguin",
      "twitter": "http://twitter.com/ldoguin",
      "homepage": "http://blog.couchbase.com/facet/Author/Laurent+Doguin",
      "talk": {
        "title": "A practical RxJava example with Ratpack and Couchbase",
        "abstract": "RxJava seems to be this awesome thing that every cool kids start using. But when you read about it, half of the time it's hard to make anything out of it. Sure the isolated examples look nice but it's always hard to put this in perspective with a real app. In this talk I'll go through an application made to store, index and search files. We'll see the benefit brought by using RxJava and Ratpack. Nothing too complicated or advanced, just something pragmatic.",
        "tags": [
          "RxJava", "Couchbase", "noSQL", "Ratpack"
        ],
        "level": "Beginner"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Tomasz Dubikowski",
      "description": "Software Development Team Lead at Ocado Technology",
      "biography": "Tomek is a Software Development Team Lead at Ocado Technology.  He has 5 years experience working as a Software Engineer, Scrum Master and Agile Trainer. As an engineer, he is passionate about craftsmanship, propagating clean code, automated tests, behaviour driven development and domain driven design. As a leader, he helps to build an organisational culture based upon autonomy, collaboration and trust so that developers are equipped with both the hard and soft skills necessary to build truly awesome products. Tomasz loves to change the reality around him. He his highly pragmatic, challenges orthodoxy at all levels and believes that there is always room for improvement.  He is always eager to discuss and share his ideas.",
      "image": "assets/img/speakers/tomasz-dubikowski.png",
      "ref": "tdubikowski",
      "url": "infoSpeaker.html?ref=tdubikowski",
      "twitter": "https://twitter.com/tdubikowski",
      "homepage": "https://agilehabits.wordpress.com/",
      "talk": {
        "title": "Epic Battle: Zombies vs Mutants",
        "abstract": "People love zombies. Just look how many movies about zombies are made. But Why? They don't have purpose, consume 'non-zombie' resources, spread panic and fear. Even though, people love them. People don't love mutants. 'Mutant' is such a negative word. Even if you find a really cool mutants, like Spiderman or Wolverine, we call them superheros. It just sounds better. But when you look at them they have great powers that can be used for great things. But nope, people don't love mutants. IT people are much smarter and prefer mutants over zombies. How many zombie test we have in our systems? Tests, that don't check anything, fail in the worst moment, consume resources and time? Do we even know where they are and how many of them there is exactly? Not really, and here mutants can help. And to be more precise - mutation testing. In my presentation I would like to talk about mutation testing and how they affect the quality of both the code and tests. During live coding session I would like to present lightweight and easy to introduce framework PITest, which I consider to be the best available solution for mutation testing.",
        "tags": [
          "Testing"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Arek Sokolowski",
      "description": "Programmer, mainly Java, working at Ocado Technology",
      "biography": "Programmer, mainly Java, JVM & Co. Currently working at Ocado Technology. Fan of functional programming, good books, continuous delivery, and mountains. Claims, that writing a code is not the most difficult part of so-called software engineering. Likes to find patterns, common rules, and common denominators, both in software and life. Hobby: erasing whiteboards.",
      "image": "assets/img/speakers/arek-sokolowski.jpg",
      "ref": "asokolowski",
      "url": "infoSpeaker.html?ref=asokolowski",
      "twitter": "https://twitter.com/areksokolowski",
      "homepage": "",
      "talk": {
        "title": "Taste of new in Java 9",
        "abstract": "Do you know what are jshell, jigsaw, G1? How can they help you and your team? To give you the taste of Java 9, I will present the most interesting of its features, like jshell (Java 9 REPL environment) and jigsaw (Java 9 modules) in action. If you are interested in the future of core Java platform, this session is for you!",
        "tags": [
          "Java9"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Maarten Mulders",
      "description": "Senior developer, trainer and architect",
      "biography": "Enthusiastic senior developer, trainer and architect with a passion for elegant and simple solutions. My speaking experience includes talks on a range of topics, held both inside my company (<a href='https://youtu.be/HXSB5DxIQUk' style='color:blue'>https://youtu.be/HXSB5DxIQUk</a>) and at different clients. I’ve spoken about the ELK-stack at ConFESS_2015 (<a href='https://youtu.be/mtI88EkWZgU' style='color:blue'>https://youtu.be/mtI88EkWZgU</a>) and Javantura v3. I’ve also given lectures and workshop about other topics during various events in my own company and at clients.",
      "image": "assets/img/speakers/mmulders.jpg",
      "ref": "mmulders",
      "url": "infoSpeaker.html?ref=mmulders",
      "talk": {
        "title": "ELK: BigData for DevOps",
        "abstract": "Big Data is often related to companies like Google, Facebook or Twitter. Indeed, 500 bilion tweets a day, 1,3 billion active Facebook users or 30 billion web pages to search, we're talking 'Big Data'. Many smaller companies have Big Data, too, without knowing it: application log files. This talk discusses how to use Elasticsearch, Logstash and Kibana to gain insight in these data. It also covers a real-world example at a major Dutch bank, including common pit falls, best practices and lessons  learned. It also addresses how monitoring was done before using the ELK stack and what the major advantages are. After attending this session you will be able to leverage the power of the ELK stack for your own application. Even for smaller companies and applications, a lot of knowledge can be gained from proper insight in your production environment.",
        "tags": [
          "Bigdata",
          "Elasticsearch",
          "Logstash",
          "Kibana",
          "ELK-stack"
        ],
        "level": "Advanced"
      },
      "scheduleId": ""
    },
    {
      "enabled": "1",
      "name": "Mario Garcia",
      "description": "Software Developer",
      "biography": "I’ve always been interested in learning new ways of improving my skill sets as software developer. That idea sometimes has led me in the past to look for that knowledge abroad. Although I’m also have my days, I wouldn’t start anything without testing it in the first place. What languages do I like ? Although I personally prefer Groovy, all languages within the JVM are welcomed, and of course some others outside the JVM such as Haskell. When I’m not programming I like simple things like: a full moon, testing, having a coffee, coding, walking downtown, refactoring, and all over again.",
      "image": "assets/img/speakers/mgarcia.jpg",
      "ref": "mgarcia",
      "url": "infoSpeaker.html?ref=mgarcia",
      "twitter": "https://twitter.com/marioggar",
      "talk": {
        "title": "Generative Testing with Spock",
        "abstract": "As our application grows in size and complexity, sometimes our testing code becomes more and more difficult to write and maintain, more use cases, more values to check...STOP! This talk will discuss on how property-based testing and Spock could help you writing more concise and maintainable testing code. Spock is a testing and specification framework for Java and Groovy with a beautiful and highly expressive specification language.",
        "tags": [
          "Testing",
          "Spock",
          "Groovy"
        ],
        "level": "Intermediate"
      },
      "scheduleId": ""
    }
  ]
}