{
  "items": [
    {
      "id": "5c19647038da16778cb20fc5",
      "title": "From object oriented to functional and back: the pursuit of pragmatic programming ",
      "abstract": "Object Oriented Programming dominated the software development landscape in the last decade of XX century and in the first of XXI. In more recent years, even as a consequence of the advent of multicore CPUs, Functional Programming and its principles started attracting more interest, becoming at least equally relevant in our industry. The biggest mistake made by programmers nowadays is considering OOP and FP as two mutually exclusive paradigms. This misconception is also the product of a misunderstanding about what OOP actually means and its founding principles. The biggest pros of OOP are polymorphism and encapsulation while FP strengths are immutabilty and its declarative style, but these features are orthogonal and there's no reason why they cannot coexist in the same program. The final purpose of this talk is twofold: debunking the misconceptions on OOP and showing that OOP and FP are actually complementary techniques that can happily coexist in the same codebase. It is the duty of experienced developers to fill their toolbox with both OOP and FP tools and to know from time to time how to choose and employ the tool that is the best fit for the problem at hand.",
      "type": "talk",
      "tags": [
        "Java",
        "Functional Programming",
        "Object Oriented Programming",
        "Design pattern",
        "Best practices"
      ],
      "level": "middle",
      "speakers": [
        "16fd0826550372e61a8c17d3acdf30d0871de728"
      ],
      "scheduleId":"#MON-TC1-SE5"
    },
    {
      "id": "5c19651d38da16778cb20fc6",
      "title": "Poker Hands - Refactoring into Chain of Responsibility",
      "abstract": "Poker Hands are are put into sequential order and the player who holds the highest one wins. Let’s make fun of it then and perform some refactorings of code that identifies what poker figure given player holds. We will transform a set of nested if-else statements into a nice chain of responsibility classes (Straight Flush, Four of a Kind, Full House, ...) . This way the chain of classes put into sequential order will figure out the score given player holds. Proxy design patterns will come into the picture as well.\n\nAll I can promise during this refactoring workshop is definitely no bluffing - just pure focus on code transformations. BTW : Did you know that real poker players are bluffing very rarely…? \n\nPrerequisite : become acquainted with poker rules if you haven’t played it so far, as business perspective and understanding existing code is the initial step for any refactoring. And don’t forget to install IntelliJ IDE - our master refactoring tool!",
      "type": "workshop",
      "tags": [
        "Refactoring",
        "Design Patterns",
        "Java"
      ],
      "level": "middle",
      "speakers": [
        "34e64a4d88094a0c4231d49cc0305d61d7b854ee"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c196dd738da165f64820b29",
      "title": "Reactive Spring",
      "abstract": "Microservices and big-data increasingly confront us with the limitations of traditional input/output. In traditional IO, work that is IO-bound dominates threads. This wouldn't be such a big deal if we could add more threads cheaply, but threads are expensive on the JVM, and most other platforms. Even if threads were cheap and infinitely scalable, we'd still be confronted with the faulty nature of networks. Things break, and they often do so in subtle, but non-exceptional ways. Traditional approaches to integration bury the faulty nature of networks behind overly simplifying abstractions. We need something better.\n\nSpring Framework 5 is here ! It introduces the Spring developer to a growing world of support for reactive programming across the Spring portfolio, starting with a new Netty-based web runtime, component model and module called Spring WebFlux, and then continuing to Spring Data Kay, Spring Security 5.0, Spring Boot 2.0 and Spring Cloud Finchley. Sure, it sounds like a lot, but don't worry! Join me, your guide, Spring developer advocate Josh Long, and we'll explore the wacky, wonderful world of Reactive Spring together.\n\n",
      "type": "talk",
      "tags": [
        "java",
        "reactive",
        "spring",
        "mongodb",
        "sql",
        "postgresql",
        "rsocket"
      ],
      "level": "middle",
      "speakers": [
        "3803f8e428feb905178afd9025cfc53fb47a8abc"
      ],
      "scheduleId":"#MON-TC1-SE3"
    },
    {
      "id": "5c196e0238da165f64820b2a",
      "title": "The Istio Workshop",
      "abstract": "The first generation of microservices was primarily shaped by Netflix OSS and leveraged by numerous Spring Cloud annotations all throughout your business logic. The next generation of microservices will leverage sidecars and a service mesh. In this session, we will give you a taste of Envoy and Istio, two open source projects that will change the way you write distributed Java applications on Kubernetes. Check out how we use Envoy and Istio to deal with traffic shaping, network fault-injection, A/B testing, dark launches, mirroring, and much more.",
      "type": "workshop",
      "tags": [
        "microservices",
        "java",
        "cloud native",
        "service mesh"
      ],
      "level": "middle",
      "speakers": [
        "c5224c12852709f7ae60fa80d93f46fd2d64a5c4"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c196e1138da165f64820b2b",
      "title": "Fantastic Frameworks and How to Avoid Them",
      "abstract": "As high-level programming languages users, we love bold promises of getting all our problems solved just by adding a few annotations. \n\nThose few annotations come often bundled with other magical techniques like classpath scanning or dynamic proxies… and creep into our domain models contributing to long-term maintainability issues... and/or consultancy and premium enterprise support costs.\n\nIn this session, we’ll have a look at the cons of adopting invasive frameworks and how we can minimize the problems they cause.",
      "type": "talk",
      "tags": [
        "Java",
        "Architecture",
        "Methodology"
      ],
      "level": "middle",
      "speakers": [
        "dcf4d5f83bc2dab51fb90922055352668da14a18"
      ],
      "scheduleId":"#MON-TC2-SE4"
    },
    {
      "id": "5c196e2c38da165f64820b2c",
      "title": "Bulletproof Java Enterprise Applications for The Hard Production Life",
      "abstract": "It’s one thing to develop Java Enterprise applications, to execute, and validate them in test environments. Running the application in production, however, is a whole other story. Production life is harsh, unforgivable and the ultimate verification whether your application is able to add value to its users. Besides knowing the Java Enterprise APIs, developers therefore also need to know how to meet production requirements.\n\nThis session shows which non-functional requirements we enterprise developers need to be aware of to build stable and resilient applications. We will see different resiliency approaches, such as circuit breakers, bulkheads, or backpressure, in action. We will implement these concepts using the Java Enterprise API, MicroProfile, and certain Java EE extensions. Furthermore, we will see, how especially service meshes enable us to add resiliency to multiple microservices in a transparent, redundancy-free fashion.\n\nAdding telemetry to our applications is crucial to gather insights about the application under production load. We will see how to enhance our microservices with concerns such as monitoring, tracing, or logging in a minimalistic way.\n\nAll of the time will be spent live-demoing Java Enterprise applications that are deployed to an Istio cluster.",
      "type": "talk",
      "tags": [
        "Enterprise Java",
        "Production Environments",
        "Cloud Native Java"
      ],
      "level": "middle",
      "speakers": [
        "1799a6d25dbe9b65e5a25078815b20fc9af956f4"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c196e3638da165f64820b2d",
      "title": "Kotlin & Implications in an IoT project ",
      "abstract": "Develop IoT solutions with Kotlin is possible thanks to the incorporation to Kotlin as a first class programming language to Android and the becoming of Android Things, an optimized version of Android for embedded devices. This talk is looking for explore the aspects around IoT projects, Hardware, Security, Server Side, Data Analysis from the hand of Android Things and Kotlin.\n\nThe Internet of Things is a technology that has been echoing for some time. Arriving to generate interesting and attractive solutions. It usually happens that those who develop this type of solutions know about the Hardware, or they only have knowledge of the Software side. This talk seeks to explore all those aspects around IoT in the hand of a real project for monitoring fishbowls (something that you can implement at home). \n\nIn the hardware side, we will use sensors and different technologies for handle the information obtained from these (Raspberry PI, Arduino, etc). Since we want to show how to use Kotlin for develop IoT solutions, we will use Android Things with Kotlin and Raspberry PI. \n\nThe server side, using Serverless or IoT cloud solutions, options to analyze our information. Finally, is important take some considerations over the security aspects in IoT projects, although there are not yet 100% solid solutions, there are already efforts to solve this.",
      "type": "talk",
      "tags": [
        "JVM langs (Kotlin)",
        "IoT",
        "Android"
      ],
      "level": "beginner",
      "speakers": [
        "d43c4a28c6222750fcef9b5b50013ea8ed897d19"
      ],
      "scheduleId":"#MON-TC2-SE2"
    },
    {
      "id": "5c1bbfa338da160e621b7a80",
      "title": "Micro Frontend: the microservice puzzle extended to frontend",
      "abstract": "Microservices are at the top of the hype right now and perhaps you’ve already fallen for them and are replacing your good old monolith for new shiny microservices on the back-end.\n\nBut have you ever considered doing the same on the front-end? Even hype-r (or crazy-er, we’ll let you judge), have you tried mixing different JavaScript frameworks (let’s say AngularJS, Angular and React for example) in a Single Page Application?\n\nThat’s what Micro Frontend is and that’s what we’ve done at Saagie. In this talk I’d like to give you feedback on the different architectures we’ve tried, their pros and cons and help you find which one would be the best for you, just in case you’d like to opt for the dark and crazy side of front-end.",
      "type": "talk",
      "tags": [
        "micro-services",
        "front-end"
      ],
      "level": "beginner",
      "speakers": [
        "df5c3701545056ca5229efe9b77ad91acf69ea02"
      ],
      "scheduleId":"#TUE-TC5-SE3"
    },
    {
      "id": "5c24ec6b38da163bd315a05f",
      "title": "Interaction Protocols: It's all about good manners",
      "abstract": "Distributed and concurrent systems can be considered a social group that collaborate to achieve collective goals. In order to collaborate a system of rules must be applied that affords good hygiene, fault tolerance, and effective communication to coordinate, share knowledge, and provide feedback in a polite trusted manner. These rules form a number of protocols which enable the group to act as a system which is greater than the sum of the individual components.\n\nIn this talk we will explore the history of protocols and their application when building distributed systems.",
      "type": "talk",
      "tags": [
        "Design",
        "Distributed Systems",
        "Concurrency"
      ],
      "level": "middle",
      "speakers": [
        "8f62b44cd97764484d759b364f5bf32e558a5edd"
      ],
      "scheduleId":"#TUE-TC2-SE3"
    },
    {
      "abstract": "Some say they can read people and tell by their expressions or body language what kind of personality they have. But what if it is possible to read people from the code they write? It would perhaps be possible to tell who to avoid because they are a little bit aggressive and who to approach because they like to help out other people. In this talk we will explore what research is conducted on the relation between personality traits and programming semantics.",
      "id": "5c36672c38da16698cf41add",
      "level": "beginner",
      "speakers": [
        "f99b4c8793cc70d6cfcb9b1c78e7c99a76b10d2e"
      ],
      "tags": [
        "#cleancode",
        "#design"
      ],
      "title": "Me, My Code and I",
      "type": "talk",
      "scheduleId":"#MON-TC4-SE7"
    },
    {
      "id": "5c36675b38da16698cf41ade",
      "title": "Nowadays Architecture Trends, from Monolith to Microservices and Serverless\t",
      "abstract": "In this session, attendees will learn about a real-world evolution to a Distributed Architecture without being involved of a complete Microservices Madness; we will be covering tips and tricks of an experience of a evolution of a huge EAR Core Banking Application and how we evolve to a modern distributed Architecture until the evolution of use 3rd party services and Serverless; tips, tricks, pros, cons and the reasons for being involved on move forward and present sample code as FaaS and explain the pitfalls of Serverless and the security concerns on this evolution. We will be using snippets code based on JAVA, JWT, JWS, Auth0, Spring Boot and Webflux on Oracle Cloud and Spring Cloud Functions on Amazon Lambdas.",
      "type": "talk",
      "tags": [
        "Java",
        "Cloud",
        "Serverless",
        "Microservices"
      ],
      "level": "middle",
      "speakers": [
        "4f72f63b37fb9bb3781b7e7b1e3246b1364c02a2"
      ],
      "scheduleId":"#TUE-TC4-SE2"
    },
    {
      "id": "5c3e5dbb38da16698cf41b28",
      "title": "Incremental adoption of microservices with an application gateway",
      "abstract": "An application gateway is a piece of infrastructure that helps existing applications incrementally adopt new architectures like microservices and serverless. It is not as single purposed as an API gateway, and not as complicated as a full service mesh and provides immediate value. In this talk we’ll explore this emerging pattern.\n\nIn this talk, we'll explore how to leverage an application gateway to get value out of your existing architecture while moving to microservices and serverless. This application gateway uses technologies like Envoy Proxy, GraphQL, and HTTP/2 to help solve some of these problems",
      "type": "talk",
      "tags": [
        "service mesh",
        "microservices",
        "cloud",
        "containers",
        "envoy proxy",
        "grpc",
        "istio",
        "serverless",
        "functions",
        "FaaS"
      ],
      "level": "middle",
      "speakers": [
        "5f729db9302ead529bf5818e137c0d3117f33fec"
      ],
      "scheduleId":"#TUE-TC2-SE4"
    },
    {
      "id": "5c3b3e4538da16698cf41b0a",
      "title": "Live Refactoring Session: Getting rid of dirty code",
      "abstract": "In this live hacking I will refactor a small Sudoku Brute-Force Solver. The code is anything but bad, but its age shows. In short sessions we want to give the legacy code a rejuvenating treatment. In doing this, I want to introduce you to my personal approach when refactoring untested legacy code.\nAmong many other things, we will cover:<ul><li>Code readability</li><li>Comments</li><li>General OO</li><li>Encapsulation</li><li>Coupling</li><li>Cohesion</li><li>Immutable Classes</li><li>Modern IO</li><li>Java 8 Streams</li></ul>I recommend that you familiarize yourself with the Sudoku rules and check the original code beforehand: <a href='https://github.com/fzoli/Sudoku/blob/master/src/java/sudoku/chan/SudokuSolver.java'>SudokuSolver.java</a> <a href='https://github.com/fzoli/Sudoku/blob/master/src/java/sudoku/chan/Grid.java'>Grid.java</a>",
      "type": "talk",
      "tags": [
        "Java",
        "refactoring",
        "live coding"
      ],
      "level": "middle",
      "speakers": [
        "1910f00e3b6a8220979782a1355b8570de1beca0"
      ],
      "scheduleId":"#MON-TC1-SE6"
    },
    {
      "id": "5c44693a9034ae38180b14b2",
      "title": "IoT powered by Microprofile – Microservices in practice",
      "abstract": "We are going to show you what happens when the management lets enterprise Java developers and architects decide how we can control the IoT devices in our new office. While it's easy to figure out why Microprofile is cool, it's harder to see how to get in into your project.\n\nBy the end of this talk, you will be introduced into the patterns and software in the enterprise world of Java explaining how to build a build a secure, stable, modular, and integrated system on an example of a completely over-engineered IoT solution to control the lights and plant's well-being in the new office.\n\nFear not if your system is more complex than controlling light bulbs and plants! This talk will show you how easily you can design a good production-ready Java full-stack system based on the Enterprise stack with Microprofile combined with good continuous deployment infrastructure patterns.\n\nThere be code, demos, and (buzzword) dragons.\n",
      "type": "talk",
      "tags": [
        "MicroProfile",
        "Java",
        "Enterprise Java",
        "Microservices"
      ],
      "level": "talk",
      "speakers": [
        "e4dbc8f86240f1f78408c1e967137aa5d8824024",
        "ce11badd5e660b5bf2b2025e167a91c302c937d5"
      ],
      "scheduleId":"#MON-TC3-SE7"
    },
    {
      "id": "5c3e5e7f38da16698cf41b29",
      "title": "Evolving a Pragmatic, Clean Architecture  - A Craftsman's Guide",
      "abstract": "Are you in a mood for a brainstorm? Join this critical review of the major decisions taken in a typical enterprise application architecture and learn to balance pragmatism with your design goals. Find out how to do just-in-time design to keep as much use-cases as simple as possible.\n\n\nThe core purpose of this presentation is to learn to strike a **balance between pragmatism and maintainability** in your design. Without continuous refactoring, a simple design will inevitably degenerate into a Big Ball of Mud, under the assault of the new features and bugfixes. On the other hand, very highly-factored code can burden the take-off of the development and end up freezing the mindset in some rigid 'a-priori' design.\n\nThe end goal of this talk is to challenge you to rethink critically the architecture of your own systems, and seek ways to simplify it to match your actual needs, with a pragmatic mindset.\n\n\"Architecture is the art of postponing decisions\", said Uncle Bob. This talk takes this idea further and explains an optimal mindset about designing enterprise applications: Evolving (Continuously Refactoring) a Pragmatic (Simple), Clean (aka Onion) Architecture, aiming to provide Developer Safety™️ and Comfort™️. It’s the philosophy that Victor distilled over the past 5 years, designing and implementing 9 applications as IBM Lead Architect, and delivering trainings and advises to many other companies.\n\nYou’ll learn how to break data into pieces (Fit Entities, Value Objects, Data Transfer Objects), how to keep the logic simple (Facades, Domain Services, logic extraction patterns, Mappers, AOP), layering to enforce boundaries (keeping DTOs out of your logic, Dependency Inversion Principle), and many more, all in a dynamic, interactive and extremely entertaining session.\n",
      "type": "talk",
      "tags": [
        "Clean Architecture",
        "Pragmatic Design",
        "Clean Code",
        "Continuous Refactoring",
        "Facade",
        "Domain Service",
        "Value Object",
        "Emerging Architecture"
      ],
      "level": "middle",
      "speakers": [
        "d27efdbbf9293c1d2cbcb35559c2558a0707a484"
      ],
      "scheduleId":"#TUE-TC2-SE2"
    },
    {
      "id": "5c36688538da16698cf41ae0",
      "title": "Responsible Microservices",
      "abstract": "These days, you can’t swing a dry erase marker without hitting someone talking about microservices. Developers are studying Eric Evan’s prescient book Domain Driven Design. Teams are refactoring monolithic apps, looking for bounded contexts and defining a ubiquitous language. And while there have been countless articles, videos, and talks to help you convert to microservices, few have spent any appreciable time asking if a given application should be a microservice. In this talk, I will show you a set of factors you can apply to help you decide if something deserves to be a microservice or not. We’ll also look at what we need to do to maintain a healthy micro(services)biome.\n\nThere are many good reasons to use a microservices architecture. But there are no free lunches. The positives of microservices come with added complexity. Teams should happily take on that complexity...provided the application in question benefits from the upside of microservices. This talk will cut through the hype to help you make the right choice for your unique situation.",
      "type": "talk",
      "tags": [
        "Architecture",
        "Microservices",
        "Serverless"
      ],
      "level": "middle",
      "speakers": [
        "ab822b577be6a2418593327d0530f2e48da634a4"
      ],
      "scheduleId":"#MON-TC3-SE5"
    },
    {
      "id": "5c48ec849034ae38180b14de",
      "title": " Type Inference: Friend or Foe",
      "abstract": "Java 10 has local variable type inference, but type inference is not really new in Java. Is type inference good or it is it bad. Are there challenges to use them? When is a good time to use type inference? What are some of the limitations to using it. This presentation includes the details of Java 10 type inference, but certainly will not limit to it. We will step back and discuss type inference from the programmer point of view and work thought the benefits and caveats. At the end of this presentation you will be able to decide when to use it and where to avoid it.",
      "type": "talk",
      "tags": [
        "Java",
        "type inference"
      ],
      "level": "middle",
      "speakers": [
        "d2c05e60af702984122c68c8a46fc574fba6f726"
      ],
      "scheduleId":"#MON-TC1-SE2"
    },
    {
      "abstract": "Amazon Corretto is a no-cost, multiplatform, production-ready distribution of the OpenJDK. Corretto comes with long-term support that will include performance enhancements and security fixes. Amazon runs Corretto internally on thousands of production services and Corretto is certified as compatible with the Java SE standard. With Corretto, you can develop and run Java applications on popular operating systems, including Amazon Linux 2, Windows, and macOS. This talk will explain on why Amazon Corretto was created. Upstream compatibility to OpenJDK is a core tenet of Corretto. Attendees will learn how an upstream OpenJDK build is published as Corretto. You’ll learn how to get started with Corretto and collaborate in open source.",
      "id": "5c3e5e8838da16698cf41b2a",
      "level": "beginner",
      "speakers": [
        "de5b08c6aec163137cfb4a1ee530799b48812be8"
      ],
      "tags": [
        "java",
        "open source"
      ],
      "title": "Amazon Corretto",
      "type": "talk",
      "scheduleId":"#MON-TC2-SE3"      
    },
    {
      "id": "5c36683738da16698cf41adf",
      "title": "Extending Spring Boot for Enterprise",
      "abstract": "Spring Boot has been an incredibly successful at reducing the time and complexity of spinning up new projects. However enterprise demands often cause Spring Boot projects to become bloated, out of date, and have inconsistent implementations, leading to them being difficult to maintain both for the teams responsible for a project and from an enterprise level of ensuring projects properly implement features like security, logging, database connectivity, and other common concerns.  \n\nIn this presentation we will look at some of the underlying philosophies of Spring Boot and see at how to apply them to the enterprise. Specific topics include creating customs starter libraries, BOMs, and easing project initialization steps all with the goal of reducing developer toil and frustration while ensuring consistent behavior across large enterprises but not blocking experimentation. If your organization has been struggling with bloated poms, projects full of dead code, and long pipelines from project conception to deployment to production this is a presentation you will definitely want to check out.  \n",
      "type": "talk",
      "tags": [
        "Java",
        "Cloud Native",
        "Spring Boot"
      ],
      "level": "beginner",
      "speakers": [
        "459fc7466dfa9163817d35cc884ca96e154c2420"
      ],
      "scheduleId":"#MON-TC3-SE4"
    },
    {
      "id": "5c48ec969034ae38180b14df",
      "title": "Zero Downtime Migrations in Istio era",
      "abstract": "You joined the DevOps movement and want to release software even faster and safer. You started reading about Advanced deployment techniques like Blue-Green Deployment, Canary Releases or Dark Shadow Technique. But how do you implement them without disrupting your users in production? With Zero Downtime! This is easy with your code, but what about ephemeral and persistent states? Most of the examples out there does not tackle this scenario (which is the most common in real systems). Come to this session and you’ll learn in a practical way how you can achieve zero downtime deployments applying advanced deployment techniques for maintaining the ephemeral and persistent state with Istio",
      "type": "talk",
      "tags": [
        "devops",
        "istio",
        "microservices"
      ],
      "level": "middle",
      "speakers": [
        "1cf43210c8515585e52e4d2f6f2e5e0f582049d8"
      ],
      "scheduleId":"#TUE-TC3-SE4"
    },
    {
      "id": "5c48ed809034ae38180b14e2",
      "title": "Continuous deployment to Kubernetes with the Google Container Tools",
      "abstract": "Kubernetes has become the orchestrator of choice to deploy applications. But what about Java developer's day to day job of developing those applications? Developing with containers is not always easy nor enjoyable.\n\nGoogle has launched a set of Open-Source projects that focus on Developer Experience in a world of containers.\n\nWhether you'd like to continuously deploy to Kubernetes with Skaffold, safely build images on a cluster with Kaniko or build images much faster with Jib, come learn how to setup a great CI/CD.",
      "type": "talk",
      "tags": [
        "kubernetes",
        "containers"
      ],
      "level": "middle",
      "speakers": [
        "b728a02f2048c81298ca0a5a9bee9e82d7318f18"
      ],
      "scheduleId":"#TUE-TC2-SE6"
    },
    {
      "id": "5c48ec449034ae38180b14dd",
      "title": "My Kotlin is better than your Java!",
      "abstract": "TLDR: The big discussion:  Kotlin or Java, to migrate or not to migrate and why...\n\nThe world of languages on the JVM has seen alternatives to Java come and go. Kotlin is probably the most popular one at this moment. Although Java is still one of the most commonly used programming languages, Kotlin seems to keep growing very fast. Where Java is known for its verbosity, Kotlin aims at making programming easier. On the other hand, Kotlin is a mix of paradigms and forces you to learn yet another language. Moreover, with all the new features that are rapidly introduced in Java, is Kotlin actually needed? So what are the aspects where they differ from each other? In which situations should we choose the one or the other?  Should we migrate to Kotlin or is Java good enough? As Kotlin claims full interoperability with Java, should we even choose?\nIn this talk we will fire up the battle between Kotlin and Java. In this battle one of us will root for Java while the other cheers for Kotlin. Who wins? That is totally up to you. The audience will be judge and jury. So...bring it on.\n",
      "type": "talk",
      "tags": [
        "Java",
        "Kotlin"
      ],
      "level": "middle",
      "speakers": [
        "5d1b321ccc69de748beba885f56dec92485f328a",
        "4933804ca1248303098eaa459ba614f4bbbbada1"
      ],
      "scheduleId":"#MON-TC4-SE4"
    },
    {
      "id": "5c3b3b1938da16698cf41b09",
      "title": "Full Stack Reactive with React and Spring WebFlux",
      "abstract": "You have streaming data and want to expose it as reactive streams with Spring Boot. Great! Spring WebFlux makes that pretty easy. But what about the UI? Can you stream that data to the UI and have it be reactive and constantly updating too? This session explores techniques for making your app fully reactive with Spring WebFlux and React. Mostly live coding, with plenty of time for Q & A in the midst of it all.",
      "type": "workshop",
      "tags": [
        "React",
        "Spring WebFlux",
        "RSocket"
      ],
      "level": "middle",
      "speakers": [
        "3b8f95a333469c079f0264b8b903184fe5082c05",
        "3803f8e428feb905178afd9025cfc53fb47a8abc"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c3666d138da16698cf41adc",
      "title": "Bootiful Reactive Testing & CDC with Spring Boot",
      "abstract": "Join us for an exploration of testing a reactive Spring Boot 2.x application. Test driven development gives us the confidence necessary to improve our code faster, safely. But how do you test components and services, as well as integrations across distributed systems, while maintaining fast feedback loops, and how do you do all of this within the context of reactive Java? In this talk, we'll look at how to test imperative components, reactive data flows, and mocks. We’ll examine how to take advantage of test slices, and how to test web applications. We'll look at how to ensure that API producers and consumers work well together using consumer driven contract testing without sacrificing the testing pyramid for end-to-end integration tests. And we’ll do it all within the context of functional/reactive programming.",
      "type": "talk",
      "tags": [
        "Java",
        "reactive",
        "testing",
        "tdd",
        "cloud"
      ],
      "level": "middle",
      "speakers": [
        "2e93061543cde6bde464afd77e37198f67675a4f"
      ],
      "scheduleId":"#MON-TC3-SE2"
    },
    {
      "id": "5c48ed639034ae38180b14e1",
      "title": "Java n + 1: What's in store for Java 12 and beyond",
      "abstract": "The semi-annual Java release cycle means that we get new Java features quicker. Let's get you up to speed on the latest features! Java 12 is released on March 12, 2019. \n\nJava 12 adds some nice languages features and API changes like switch expressions, string literals, and a new garbage collector algorithm. \n\nIn this talk, you will get a quick recap of features that were introduced after Java 8,  see a demo of the new features in Java 12,  and examine what is in the pipeline for future Java releases. Furthermore, we will look at the changed Java ecosystem and support model, and explore alternative Java implementations like Amazon's Corretto.",
      "type": "talk",
      "tags": [
        "Java",
        "JDK12"
      ],
      "level": "middle",
      "speakers": [
        "40afe10a3ea9ec161d15ade201a0101fa8f635f4"
      ],
      "scheduleId":"#MON-TC4-SE2"
    },
    {
      "id": "5c48ed3b9034ae38180b14e0",
      "title": "Retrospective Sailing Workshop",
      "abstract": "Hands on workshop for teams to help implement and improve Retrospectives within teams. Agile retrospectives are a great practice for helping teams to reflect on what’s going well and what could be better, and identify opportunities for improvement and change.  Retrospectives within teams helps to encourage self organisation, management and improvement. Introduction to Retrospectives: Formats for running Retrospectives, Practical exercises – Retrospective Sailing Game, Facilitating a Retrospective, Outcomes and Measures using Retrospectives. Retrospective Sailing is an agile reflection game demonstrated in this hands-on workshop. You can play as an individual in any role, as part of a development team, or with clients and customers to help understand how your journey is going. It will give you a new, fun way to run a retrospective to help to gain your bearings, identify what’s putting the wind in your sails, the anchors holding you back, and discover hidden treasure. Then you’ll plot your course and map a way forward that raises those anchors and catches the tide and a fair wind. You will be introduced to the game and try it out. There will be case examples and tips for facilitating the game too. Join us for some constructive fun, practical outcomes, and a useful tool to take back to the office. Helping teams embed continuous reflection and improvement into their work. Retrospective Sailing helps teams to reflect and map their way forward easily, in a fun, tactile and visual way. Review what's going well, what could go better, and ensure you are responding regularly to the changing horizon.",
      "type": "workshop",
      "tags": [
        "Agile",
        "Retrospectives",
        "Teams",
        "improvement"
      ],
      "level": "beginner",
      "speakers": [
        "8ba341ede35371519196bc6a3c2cd11e4789c34a"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c5225df9034ae38180b151e",
      "title": "Serverless Java Challenges and Triumphs",
      "abstract": "Serverless Functions are hot, developer and corporate interest are exploding! But let’s face it, although Java is one of the most popular programming languages in the world it isn’t the most popular language for writing functions—at least not yet. According to James Governor, “When Web Companies Grow Up They Turn into Java shops” so as functions become mainstream will Java become the dominant language for authoring functions? Can it be?\n\nIn this hands-on session, we will examine the challenges of using Java for Serverless functions and the latest features provided by the Java platform that address them. We will also dig into the open source Fn project’s unparalleled Java support (including Kotlin and Graal) which makes it possible to build, test, and scale out Java-based functions applications.",
      "type": "talk",
      "tags": [
        "Serverless",
        "FaaS",
        "Docker"
      ],
      "level": "middle",
      "speakers": [
        "a744f52d967ebb543100a1215f9fe38080a664f0"
      ],
      "scheduleId":"#MON-TC2-SE5"
    },
    {
      "id": "5c5225d49034ae38180b151d",
      "title": "Real-world HTTP performance benchmarking, lessons learned",
      "abstract": "The TechEmpower Framework Benchmark is a public comparison of more than 200 web frameworks in different languages. The competition is fierce and everyone wants to be ranked in the top!\n\n    Eclipse Vert.x is a popular reactive stack for the JVM, designed for highly scalable applications and has taken part in this competition for several years.\n\n    Performance benchmarks are often used for comparing HTTP server or web frameworks and often used by people to choose between implementations. We will look at what these benchmarks means and what they actually measure.\n\n    The presentation will explain the secret sauce powering Vert.x performance that has a direct impact on this benchmark, from Java just-in-time compiler to networking optimizations.",
      "type": "talk",
      "tags": [
        "performance",
        "HTTP",
        "vert.x"
      ],
      "level": "middle",
      "speakers": [
        "0ad9d5343d1ee682de4fd65c3df75aac55029fac"
      ],
      "scheduleId":"#TUE-TC1-SE3"
    },
    {
      "id": "5c5b57ec38da160d5d9c8e12",
      "title": "IoT Sensor Analytics with Apache Kafka, KSQL and TensorFlow",
      "abstract": "Large numbers of IoT devices lead to big data and the need for further processing and analysis. Apache Kafka is a highly scalable open source streaming platform to ingest, store, process and forward high volumes of data from thousands of IoT devices. KSQL is an open-source streaming SQL engine on top of Apache Kafka to make stream processing available to everyone.\n\nThis talk shows how to leverage Kafka and KSQL in an IoT sensor analytics scenario for predictive maintenance. A live demo shows how to embed and deploy Machine Learning models - built with frameworks like TensorFlow, DeepLearning4J or H2O - into mission-critical and scalable real time applications.\n",
      "type": "talk",
      "tags": [
        "java",
        "machine learning",
        "kafka",
        "ksql",
        "IoT"
      ],
      "level": "middle",
      "speakers": [
        "4933ebef38f82b62da601eb07e8362bb389cc560"
      ],
      "scheduleId":"#MON-TC5-SE6"
    },
    {
      "id": "5c52261c9034ae38180b1520",
      "title": "Authentication/Authorization Starters Battle",
      "abstract": "When you start a brand new app or service, you need to think about how you will manage authentication and permissions. But if you are like everyone else, you genuinely do not want to actually think about this. If someone else could do that for you, life would be great. And this has actually happened, you have the choice between several boilerplate projects or authentication/authorization libraries. In fact, you have a lot of options. Which one to choose? Let's put them to the test!\n\nIt's time for battle! In this talk we will implement some of the most common starters to showcase different types of authentication and permission management. At the end of this talk, you will have a good overview of the common existing solutions and their benefits.\n",
      "type": "talk",
      "tags": [
        "authorization",
        "authentication",
        "security"
      ],
      "level": "beginner",
      "speakers": [
        "1d54c30358e79434b07f96ddcb7dc19325134eeb"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c5b5b5138da160d5d9c8e14",
      "title": "Uncovering Project Amber",
      "abstract": "Stay ahead of the curve. Find out how Project Amber is transforming Java’s basic language constructs and introducing newer features, to enhance developer productivity and coding experience.\n\nIn this session, you'll cover code examples of type inference with local variables and lambda parameters using ‘var’ (Java 10 and 11). You’ll discover how the switch expressions (Java 12) make your code readable and concise, taking off the ambiguity with switch constructs. If you think using String concatenation is cumbersome, especially with regex, JSON, XML or SQL queries, don’t miss Raw String Literals (Java 13). That’s not all. Project Amber also includes Enhanced Enums, Data Classes, Lambda Leftovers, Pattern Matching, and Concise Method Bodies.\n\nHow do these additions or modification impact you to read or write code? Should you really bother about all these changes? Yes,  together, these changes will transform how you write your everyday code. The audience will takeaway why, how and where to use these language features to improve everyday coding experience. ",
      "type": "talk",
      "tags": [
        "#Java",
        "#ProjectAmber"
      ],
      "level": "beginner",
      "speakers": [
        "388f6f9ee4eb169ce6d936f7ce3952f6aadd211f"
      ],
      "scheduleId":"#MON-TC4-SE3"
    },
    {
      "id": "5c5b575a38da160d5d9c8e0f",
      "title": "Introduction to Micronaut: Lightweight Microservices with Ahead of Time Compilation",
      "abstract": "In this session, the creator of Micronaut and Grails introduces the newly released Micronaut framework and demonstrates how Micronaut’s unique compile-time approach enables the development of ultra-lightweight Microservices for Java. Compelling aspects of the Micronaut framework include: subsecond startup time, small processes that can run in as little as 10 MB of JVM heap, no runtime reflection, Dependency Injection and AOP, and Cloud Native. Graeme will also demonstrate how you can take your Microservices to the next level by using Micronaut's Ahead of Time Compilation (AOT) support and Oracle's GraalVM to achieve instant startup and ultra-low memory footprint.",
      "type": "talk",
      "tags": [
        "Java",
        "Microservices",
        "Micronaut",
        "Cloud Native"
      ],
      "level": "beginner",
      "speakers": [
        "6c31223d3be1de9ea66a96974ec4f524cd6a786f"
      ],
      "scheduleId":"#MON-TC2-SE6"
    },
    {
      "id": "5c5225f49034ae38180b151f",
      "title": "Machine Learning: From buzzword to reality with Java",
      "abstract": "Commercially, machine learning and artificial intelligence are a popular trend, but as a Java developer (not a data scientist) how do we incorporate these techniques intelligently into our applications? \n\nMachine learning (ML) techniques can support the development of intelligent applications for facial or speech recognition, pattern matching, fraud detection, driverless cars and many more. However, how can you decipher whether these methods are just popular buzzwords or a profitable venture for your companies applications? This session will cover my journey as a Java developer learning how to use ML techniques intuitively and produce my own intelligent application. We will explore how to prototype your own ML algorithm implementations and then how this can be transformed into a cloud native application and deployed with Kubernetes. The session will delve into designing and implementing microservice architectures and present how to leverage their advantages.\n\nThe session will provide knowledge of:\nMachine learning from the viewpoint of a developer.\nMicroservice architecture design.\nDeploying your own intelligent application.\n\nThis presentation should be attended by developers who want to start making the transition to using ML techniques intuitively in their applications. \n",
      "type": "talk",
      "tags": [
        "Machine Learning",
        "Microservices",
        "Kubernetes"
      ],
      "level": "middle",
      "speakers": [
        "d89cefec93be3aba5a4a16347d38216b67606322"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c5b576538da160d5d9c8e10",
      "title": "Learn Micronaut: a reactive microservices framework for the JVM",
      "abstract": "Micronaut is a modern, JVM-based, full stack microservices framework designed for building modular, easily testable Microservice applications in Java, Kotlin or Groovy. Micronaut is developed by the creators of Grails and takes inspiration from lessons learnt over the years building real-world applications from monoliths to microservices using Spring, Spring Boot and Grails.<br><br>This instructor-led workshop covers building a couple of microservices using Java, Gradle, JPA with H2 and MongoDB and Consul. It also covers the basic features of Micronaut, such as:<br>- Dependency Injection and Inversion of Control (IoC).<br>- Configuration system.<br>- HTTP services.<br>- Cloud and serverless deployments.<br>- Management & Monitoring.<br>",
      "type": "workshop",
      "tags": [
        "Java",
        "Microservices",
        "Groovy",
        "Kotlin",
        "Micronaut",
        "Spring",
        "Gradle",
        "Consul"
      ],
      "level": "advanced",
      "speakers": [
        "417a471e81a8522f2868a154c587bfd4484f1310"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c69474938da1663aa5fc661",
      "title": "Reactive Domain-Driven Design. Solving complexity by design.",
      "abstract": "In new fields, such as IoT, software complexity comes at you rapidly, and with time complexity can dominate systems and the teams that work on them. Previously unforeseen customers, functionality, and other demands, such as short timelines, and your desire to deliver everything to everyone, can break you and your code. When that happens business opportunity is lost, along with your confidence and reputation. Learn how you can rethink software design and implementation with the actor model. Use actors—small, independent computing components—in a business-driven fashion to focus on delivering new functionality in a business-driven way.",
      "type": "talk",
      "tags": [
        "IoT",
        "Kotlin",
        "DDD",
        "Microservices",
        "Cloud",
        "GCE",
        "Kubernetes",
        "Actor Model",
        "Reactive Software Design"
      ],
      "level": "middle",
      "speakers": [
        "ea8cef2c8d8bc8f303ad8e7436c5be94f6dafcd2",
        "c9f19a5a2dbbfed36664ef31c4ee86c0dfbbe388"
      ],
      "scheduleId":"#MON-TC1-SE4"
    },
    {
      "id": "5c5b580038da160d5d9c8e13",
      "title": "Bust the burglars: Machine Learning with TensorFlow and Apache Kafka",
      "abstract": "The integration of event streams is becoming increasingly complex in the world of sensors, media streams and the Internet of Things. In this session I will discuss how Apache Kafka and TensorFlow can be used to process real time video events and send alerts when a potential burglary is detected. \n\nSpecifically, I'll discuss how Kafka Connect and Kafka Streams can be used to read images from a media stream and how this can be integrated with TensorFlow to analyse the resulting event streams.\n\nAlthough the use case presented is based on home security, the same technology used to analyse event streams can be applied to other use cases, as I will demonstrate during this session.",
      "type": "talk",
      "tags": [
        "Kafka Streams",
        "Kafka Connect",
        "Machine Learning",
        "TensorFlow"
      ],
      "level": "middle",
      "speakers": [
        "ea89fe753dbd87eb417cd4bc34f5df5216b48d70"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c5b57e038da160d5d9c8e11",
      "title": "Tips and Tricks about Apache Kafka in the Cloud for Java Developers",
      "abstract": "Who are you? You are a talented developer who has been using Apache Kafka in your projects on-premises for a long time, as well as writing Java code to write and read data to and from topics. However, your manager asked you to design an architecture in which both Apache Kafka and your code will run in the cloud, and just like that, you find yourself worried about being able to deliver this project.\n\nThis talk will demonstrate that there is nothing to be worried about, though you may need to learn a few tips and tricks along the way to ensure the success of your projects. We’ll use live demos to show which changes your architecture and code should undergo, as well as discuss the kinds of problems that often arise in cloud deployments",
      "type": "talk",
      "tags": [
        "Java",
        "Cloud",
        "Design Patterns"
      ],
      "level": "middle",
      "speakers": [
        "1126c74440db86e536e583215673f4a4931b1049"
      ],
      "scheduleId":"#MON-TC5-SE5"
    },
    {
      "id": "5c64984138da16483151bb38",
      "title": "Extending Kubernetes with Spring Cloud",
      "abstract": "Can Kubernetes be extended? Why would you ever need to extend Kubernetes?  \n\nIn this session we will answer these two questions and discuss why it’s important to learn what can be done to extend Kubernetes and how some projects are already doing so. We will show how Spring Cloud (and Spring Cloud Kubernetes) components can help to provide a more native Kubernetes experience for our applications. \n\nWe will also explain the main extension points for Kubernetes from a Java Developer’s perspective. To demonstrate this, we will live code some extensions and deploy services to a real cluster and discuss the common challenges and pitfalls that you will face and need to overcome. We will use the Spring Cloud Gateway project to create a router that can understand domain specific extensions.\n\nAs a Java Developer, this session should provide you with  a deeper understanding of why you should master the concept of extending Kubernetes while building cloud native applications. \n",
      "type": "talk",
      "tags": [
        "spring cloud",
        "Kubernetes",
        "java",
        "open source"
      ],
      "level": "advanced",
      "speakers": [
        "4b26a098aafaf6bc3d533389b61d3ef5ab01f5a3"
      ],
      "scheduleId":"#TUE-TC4-SE4"
    },
    {
      "id": "5c64984b38da16483151bb39",
      "title": "Ready to hire a bot as a developer?",
      "abstract": "Not everything during the development process requires creativity or it is fun. Many times, we need to review code, fix coding style issues, upgrade libraries, or simply update our manifest files. At schibsted, we decided to measure, automate and promote them.\n\nDuring this session, we will explore how could we take benefits of an event-driven architecture (based in open source technologies) to make the developer process fun again and we explore how to integrate in our GitHub projects a new developer that helps us with these tasks.",
      "type": "talk",
      "tags": [
        "event-driven",
        "productivity",
        "java"
      ],
      "level": "middle",
      "speakers": [
        "a925c7b2692519ec35f1a5c0765d0c07249bf530",
        "efc78140677c0c1d0940f83acd9ea58165a82701"
      ],
      "scheduleId":"#MON-TC4-SE5"
    },
    {
      "id": "5c6498b438da16483151bb3a",
      "title": "Kubernetes the AWSome Way!",
      "abstract": "Amazon Elastic Container Service for Kubernetes (Amazon EKS) makes it easy to deploy, manage, and scale containerized applications using Kubernetes on AWS. \n\nIn this hands-on workshop, we cover how to set up Amazon EKS to run common production applications and implement operational best practices, including:\n\nBuilding a code deployment pipeline\nPerforming code updates and rollbacks with health checks\nApplication Logging, Monitoring, and Tracing\nTraffic Routing with Service Mesh\nMetrics-based Auto Scaling\n\nCome prepared to build with a laptop and active AWS Account. Basic AWS and Linux Knowledge is recommended.",
      "type": "workshop",
      "tags": [
        "#Kubernetes",
        "#MIcroservices",
        "#Istio",
        "#AWS"
      ],
      "level": "advanced",
      "speakers": [
        "20576670e696ba8ea562ba8275e300953e41675e",
        "71af056fedc23b5b4210ca138eb31f0852041361"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c64983638da16483151bb37",
      "title": "Implementing a Simple JVM in Java and Rust ",
      "abstract": "The JVM is a truly remarkable piece of software, but it is still just a computer program, not magic!\n\nIn this talk, I will explain how we might start to implement a JVM from scratch, using the Java programming language. Fundamental concepts such as the bytecode interpreter, classfile parsing and memory management will be explained, using an open-source implementation as reference. We will build up a working interpreter capable of executing simple methods, and then discuss the limitations of the simple JVM.\n\nThe second half of the talk will be to show how the Rust programming language provides a good alternative implementation language for our simple JVM. We will showcase some basic Rust language features and show how they can be used to provide a version of our JVM that is much cleaner and easier to understand, even if you've never seen Rust code before!",
      "type": "talk",
      "tags": [
        "Java",
        "JVM Internals",
        "Rust"
      ],
      "level": "advanced",
      "speakers": [
        "a71020196a6877a18aa38df8e51e12fc6807d6c7"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c728b1c38da16567538857a",
      "title": "FP vs OOP: Choose Two",
      "abstract": "This talk is about the fictitious divisions we invent, and how they harm the progress of our industry.  In particular, we'll look at the supposed tension between Functional Programming and Object-Oriented Programming, and hopefully see that the tension is all in our heads.\n",
      "type": "talk",
      "tags": [
        "keynote",
        "functional",
        "paradigm"
      ],
      "level": "middle",
      "speakers": [
        "da0ad51569e9380e792e4cc5673578a58850fe60"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c728afd38da165675388579",
      "title": "Java Futures, 2019 Edition ",
      "abstract": "Since last year, we've seen two more major versions of the JDK!  What's changed in the last year, and what's coming down the road? Join Java Language Architect Brian Goetz in a whirlwind tour of just some of the features coming to Java next. ",
      "type": "talk",
      "tags": [
        "java",
        "jdk"
      ],
      "level": "middle",
      "speakers": [
        "da0ad51569e9380e792e4cc5673578a58850fe60"
      ],
      "scheduleId":"#TUE-TC1-SE4"
    },
    {
      "id": "5c770fff38da167fbce02cea",
      "title": "OpenShift for Developers in Action",
      "abstract": "Are you an application developer? Have you heard about Docker, Kubernetes and OpenShift? Do you want to be proficient on this technology? Do you want to understand the platform as a developer and what capabilities are provided to you? In this workshop you will learn how to deploy and manage applications using Docker, Kubernetes and the open source OpenShift projects to truly simplify your development flow. We will create a complex application, microservices oriented, in different languages, and in the process we will explore different capabilities provided by the OpenShift platform.",
      "type": "workshop",
      "tags": [
        "containers",
        "openshift",
        "kubernetes",
        "developer"
      ],
      "level": "beginner",
      "speakers": [
        "f35d1872137ef145c138baa293c92834f88a8560",
        "ff55294f8464ef742da59a126c35e25670d377dc"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c64982e38da16483151bb36",
      "title": "How to Participate in the Future of Java",
      "abstract": "This session will explore how Java development has been brought into the open and many of the shifts in the Java community over the past year, Several Java developer efforts have brought open source development processes and new levels of transparency and participation into their communities. Learn about the latest Java innovations to the Java SE Platform - Java SE 10, 11, 12 and beyond. Since the initiation of efforts to expand the developer participation in the Java community, Java standards development is more open that it ever has been.\n\nLearn how to take part in the Java developer community and the upcoming changes to Java - you can participate as an individual, corporation, or nonprofit such as a Java user group (JUG). This session answers questions about why and how to participate in the evolution of the Java platform. You will also learn about the global Adoption programs and how you can participate in contributing to the future of Java\n\n",
      "type": "talk",
      "tags": [
        "Java",
        "community",
        "openjdk",
        "jvm",
        "javase"
      ],
      "level": "middle",
      "speakers": [
        "415f956d463d815e32e0fd2c3bca6422b9babe4e"
      ],
      "scheduleId":"#MON-TC1-SE7"
    },
    {
      "id": "5c7714b538da167fbce02ceb",
      "title": "Kubernetes and the 12 factors cloud applications",
      "abstract": "The 12 factors represent the expression of cloud application perfection, yet the cloud-agnostic Kubernetes gets us closer to it! Kubernetes, with its cloud-agnostic container deployments, complements the 12 factors apps with their flavours across frameworks and cloud providers. In this session I will showcase how applications complying with the 12 factors can graciously take advantage of the best practices with Kubernetes.  Each of the principles will be illustrated by a demo.",
      "type": "talk",
      "tags": [
        "methodology",
        "Kubernetes",
        "best practices"
      ],
      "level": "middle",
      "speakers": [
        "c93a48ea7c1d8a91f60be490b32b9357f77d8212"
      ],
      "scheduleId":"#MON-TC5-SE2"
    },
    {
      "id": "5c7e19e738da16574c349f02",
      "title": "Distributed Tracing in the Wild",
      "abstract": "You’ve probably heard about distributed tracing, that it solves all diagnosis problems or perhaps it can wash your car.\n\nThis session is not about buzz; it is about real world sites.. how real people understand production requests as they traverse their microservice architectures.",
      "type": "talk",
      "tags": [
        "observability",
        "tracing",
        "distributedtracing",
        "zipkin"
      ],
      "level": "middle",
      "speakers": [
        "893a2efbfaeeb5ce34ced62745778f7a8b02c1b8"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c770f8438da167fbce02ce9",
      "title": "Flow in Software Design, Practices, and Processes",
      "abstract": "\"Flow\" is Lean terminology but also a psychological state. Flow allows us to achieve value and happiness through our work. How we, design/deploy software and use development practices/processes has a major impact on \"flow\" in both meaning of this word. I will describe some properties in software design and process that are essential to maintaining flow, if you don't have them in your current work then you must strive towards them.",
      "type": "talk",
      "tags": [
        "XP",
        "DevOps",
        "Software Design",
        "Architecture",
        "Agile",
        "Lean"
      ],
      "level": "middle",
      "speakers": [
        "a9fa078a7b8408c731c79c0060b9956373bfb5f6"
      ],
      "scheduleId":"#MON-TC3-SE3"
    },
    {
      "id": "5c9409c138da165dcdf16001",
      "title": "Best practices in a modern (microservices) environment ",
      "abstract": "After having seen \"the latest fad\" for decades, we realize that there is no silver bullet. In this talk, we revisit the basics, influenced by Extreme Programming Practices, Principles, and Values.\n\nThis is a talk to reflect on why we do the things that we do, to bring a purpose to our practices, and to review what has been working over the last 20 years, even if this is not so well-known yet.",
      "type": "talk",
      "tags": [
        "Best practices",
        "Microservices",
        "Practices",
        "Principles",
        "Values",
        "Extreme Programming",
        "XP"
      ],
      "level": "middle",
      "speakers": [
        "fe5af6cd06dbc35f328b74b9c870d914fcbb6a9c"
      ],
      "scheduleId":"#MON-TC5-SE4"
    },
    {
      "id": "5c94098138da165dcdf15fff",
      "title": "Let it fail: resilience patterns for microservices",
      "abstract": "It's 2019. Teams are independent and we don't have a monolith anymore. We were told that with microservices we could keep our core functionality working while less important parts of the system are slow or even down. The problem is: designing distributed systems is not an easy task. The network is unreliable, services fail and there are lots of moving parts. At mytaxi, being able to resist partial failure is an essential requirement. We need to ensure that our customers have a smooth user experience, getting a taxi home or running into the airport, even when things go wrong in our system.<BR><BR>mytaxi's platform depends on ~250 services that might fail at any time. This talk is focused on how we achieve fault-tolerance and what we learned during this journey. I will discuss resilience techniques that we use and how they can be useful to your business as well. Idempotence, retries, health checks, rate limiting, bulkhead and circuit breaking concepts, together with some real-world examples are on the agenda.",
      "type": "talk",
      "tags": [
        "Microservices",
        "Integration",
        "Cloud",
        "Resilience",
        "Failure"
      ],
      "level": "middle",
      "speakers": [
        "3b41d2043c201d402e1a97965b11f7e304a381e6"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c9408bb38da165dcdf15ffb",
      "title": "Winning the language war - How N26 decided to adopt Kotlin",
      "abstract": "Adopting a new programming language is a big deal. It divides opinions at a company, department, and team level. Developers love arguing about their preferred programming language of choice. Debates and discussion often focus on what one language offers over another. No one ever talks about how to navigate this debate.\n\nIn this talk, I want to share how N26, the mobile bank the world loves to use, successfully overcame this debate by sharing the process of how we adopted Kotlin. I’ll share our failed attempts in other languages, why we decided to explore (yet another!) language, the process we went through and the heated discussions we had. I’ll highlight concrete experiments we conducted to collect data and share insights into our process of adopting a new programming language. I’ll also share some lessons learned about how it all went after a year of adopting Kotlin.\n\nThis talk will be highly elegant for those of you interested in Kotlin (or another language), considering how to adopt a new programming language, or how to influence others to adopt a new programming language. ",
      "type": "talk",
      "tags": [
        "kotlin",
        "java",
        "programming language",
        "adopt"
      ],
      "level": "middle",
      "speakers": [
        "2cd0f524bac371cd77aab99978e3e2e8ec0a4529"
      ],
      "scheduleId":"#TUE-TC1-SE2"
    },
    {
      "id": "5c940a6338da165dcdf16004",
      "title": "Supersonic, Subatomic Java",
      "abstract": "Java was born in the mid-90s, the era of TLC and Boyz II Men, long before the rise of Linux server virtualization and the Linux container.\nWe took great pride in running Java applications for weeks if not months without restarts and Java assumed the whole computer belonged to itself, that it could consume all available memory and CPU.  In this presentation, we will demonstrate the problems associated using Java for \"microservices\", and how the open source ecosystem is working to insure the future of Java by being cloud first, container native, serverless focused and Kubernetes optimized.  This is where GraalVM meets Quarkus, bringing server-side and enterprise-capable Java to enable you to build truly cloud native apps.",
      "type": "talk",
      "tags": [
        "microservices",
        " keynote",
        " kubernetes",
        " cloud"
      ],
      "level": "beginner",
      "speakers": [
        "27509a8795aeb61050e21551db71e2386721a968"
      ],
      "scheduleId":"#TUE-TC1-SE5"
    },
    {
      "id": "5c9409a238da165dcdf16000",
      "title": "Cryptocurrency algo-trading testing in Scala",
      "abstract": "We've came up with a combination of tools and practices that made writing our tests for an order management system that trades cryptocurrencies in several exchanges quite easy, fast and maintainable over time.\nIn this talk we would walk through an introduction to this tools and techniques, how are they combined together to form a DSL and we'll end up looking at some working examples of the tests written.\n",
      "type": "talk",
      "tags": [
        "scala",
        "tdd",
        "testing",
        "cryptocurrencies",
        "cleancode",
        "Functional Programming"
      ],
      "level": "middle",
      "speakers": [
        "b7717dd697709e684522aa7aad3e6f97534b030f"
      ],
      "scheduleId":"#MON-TC3-SE6"
    },
    {
      "id": "5c940a1438da165dcdf16003",
      "title": "Subatomic Reactive Systems with Quarkus",
      "abstract": "Quarkus provides a supersonic development experience and a subatomic execution environment thanks to its integration with GraalVM.  But, that's not all. Quarkus also unifies the imperative and reactive paradigm. Let's dig into this.\n\nThis talk is about the reactive side of Quarkus and how you can use it to implement reactive and data streaming applications. From WebSockets to Kafka integration and reactive streams, this talk shows all you need to know to build a reactive system with Quarkus.\n\n",
      "type": "talk",
      "tags": [
        "quarkus",
        "reactive"
      ],
      "level": "beginner",
      "speakers": [
        "dc47e12a60c10690bfbad90e0de30b0201d32a87"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5c9409fa38da165dcdf16002",
      "title": "How to split your software into microservices",
      "abstract": "Microservices seem to be very hot. You see and hear all these presentations about which framework to use and what tool is best. But how do you divide up your problem? In this hands-on session, we'll have a look at some of the ways in which you can split up your problem. After a short presentation we'll analyse the Set card game and try to divide it up into microservices that we'll then program in whatever tool or framework strikes your fancy. We'll do this in short iterative sessions that are interleaved with a bit of discussion about who does what.",
      "type": "workshop",
      "tags": [
        "Java",
        "Microservices",
        "DDD",
        "Eventstorming"
      ],
      "level": "beginner",
      "speakers": [
        "5b656cdacb65daac27580c4c468fc31aa3ae6464",
        "466fc88529d33847e0ed302da0b2f091c6ce1e0d",
        "d32872131f45452e2aa9dab8edf5ea71ff1a870f"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5caa579738da161235721c42",
      "title": "Real-time stock management, Kappa Architecture",
      "abstract": "Every day increases the pressure of the business analyst to consume the relevant information in near real time to support real time decision, the data are produced in a distributed and decentralized along the company's facilities around the world and from different data sources.<br><br>In this session will talk about a real business case and how we approach this problem with a Kappa architecture.",
      "type": "talk",
      "tags": [
        "Active-Active Topologies",
        "MOM",
        "Coherence Datagrid",
        "Java Data Services",
        "ESB",
        "API Management"
      ],
      "level": "middle",
      "speakers": [
        "105687f25615197c08e426d7035ba0fc5847b6ca",
        "5d23dd362b4bb5d1fd74cdcecdcd9278ed5b98e5"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5caa633138da161235721c47",
      "title": "Do not put all eggs in one container",
      "abstract": "Microservice architecture and containerization have become the standards of modern application development. The challenges that developers face today are different from the problems that we used to solve earlier. Creators of the Java runtime respond to this with the appropriate functionality in the JDK. For example, an inexpensive cloud instance can be quite powerful. And it runs a bunch of containers. Then JVMs running in different containers compete for instance resources. Starting from Java 10, virtual machines know how to live in peace, this work has continued in Java 11. On the other hand, you now need to choose which base image to use. This includes the choice of operating system and Java runtime. OS images vary greatly in size and have their own characteristics, which must be taken into account. Java runtime is also for every taste now. And even within the OpenJDK framework, assemblies from different companies are available with different functionality and size. And you can create a custom runtime image. We will consider the practical application of Java 11 functionality in a container environment typical for popular fram",
      "type": "talk",
      "tags": [
        "Java",
        "Docker",
        "Spring"
      ],
      "level": "middle",
      "speakers": [
        "6bcc1166f20d349b0a52352c5f7c2d00434a09c3"
      ],
      "scheduleId":"#TUE-TC5-SE4"
    },
    {
      "id": "5c9408e638da165dcdf15ffc",
      "title": "Introduction to Java based blockchain smart contracts framework",
      "abstract": "Most existing blockchain smart contract frameworks use their own DSL and proprietary tools making them much less accessible for developers.\n\nIn this lecture we will present a blockchain contracts framework developed in pure Java and deployed into standard Java JRE.\n\nThe talk will cover topics like:\n\n-Existing challenges to blockchain contracts design\n-Stateful vs. stateless contracts\n-Metering contract execution\n-Smart contracts security concerns\n\nIntroduction to the Ignis lightweight contracts framework:\n- Making contracts stateless\n- Custom class loaders for securely storing and loading blockchain contracts\n- Utilizing the Java security model for sandbox execution\n- Verification of deployed contracts against the contract original source code \n- Using dynamic proxies to inject runtime parameters into a contract instances\n\nThe Ignis lightweight contracts framework is part of the Java open source blockchain project called Ardor Platform, you can take a look at their sources here:\nhttps://bitbucket.org/Jelurida/ardor/src\n",
      "type": "talk",
      "tags": [
        "smart contracts",
        "blockchain",
        "ignis",
        "ardor"
      ],
      "level": "middle",
      "speakers": [
        "042bcb6c3a9fc6a76d300d96eb954ed04ec9847e"
      ],
      "scheduleId":"#MON-TC5-SE3"
    },
    {
      "id": "5c94091838da165dcdf15ffd",
      "title": "Blockchain Contract Development Workshop for Java Programmers",
      "abstract": "In this workshop you'll learn key concepts in blockchain contracts development. Participants will get a chance to develop, test, deploy and debug contracts on a real blockchain testnet\n\nAt the end of the workshop attendees will understand how a blockchain works, understand the purpose of transactions and blocks and the role of contracts in the blockchain world.\n\nContracts are developed by implementing predefined interfaces. The contract code is deployed to the blockchain as a cloud data transaction, which stores the code itself, and a contract reference transaction which associates a specific account with an existing deployed contract and configures the contract setup parameters for this specific account.\n\nUnlike many other contract development frameworks, lightweight contracts are not executed by every node on the blockchain, instead node operators have to configure their node to run contracts by registering the contract runner addon. The contract runner monitors every new block for trigger transactions. When found it triggers the respective contract after loading it from the blockchain. The contract runner also supports contracts which execute on every block and provides APIs for triggering contracts directly or using a transaction voucher.\n\nWith this approach, the “contract” code itself is a simple Java class uploaded to the blockchain and therefore digitally signed and time stamped. However, the execution of the “contract” is only performed by nodes who selected to run the ‘ContractRunner’ addon.\n\nThe input to the contract is typically a transaction with an attached message, which identifies the contract to execute, and supplies optional parameters. The output of the contract are one or more transactions submitted to the network to update the blockchain state. The transactions submitted by the contract are normal transactions which have to comply with all the existing protocol rules.\nIn other words, the lightweight contract, is Java code which implements a certain interface, stored on the blockchain. The contract code is executed by anyone who wants to run it, not by every node, and is triggered by a blockchain transaction (or by each new block). The result of the calculation made by the contract is submitted as one or more normal transactions of any type supported by Ardor.",
      "type": "workshop",
      "tags": [
        "smart contracts",
        "java",
        "blockchain",
        "ardor",
        "ignis"
      ],
      "level": "middle",
      "speakers": [
        "042bcb6c3a9fc6a76d300d96eb954ed04ec9847e",
        "6db51a7a47f433795f5024926d64e6cff36ea6d1"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5caa659838da161235721c49",
      "title": "The quest to the Language Graal: One VM to rule them all",
      "abstract": "Dear Frodo... it's not easy to work in projects using multiple languages that doesn't integrate natively. It's like a quest to Mordor: a lot of risks, traps and epic battles against Bugs Hordes (aka Orcs).\n\nIn this situation, every programmer would like to have a friend like Sam. Somebody who give interoperability between Elves, Dwarves, Java, Python, Scala, Node.js... and even helps you on creating a new language!\n\nThat friend exists. It's not Sam. Smeagol would call it \"Precious\", but it's name is Graal VM. This session will show you how it will change the way you think and build software.",
      "type": "talk",
      "tags": [
        "java",
        "jvm",
        "performance"
      ],
      "level": "middle",
      "speakers": [
        "05e624ae77d36bb40a42224637b81a487050eb3e"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5caa65b338da161235721c4a",
      "title": "Introduce girls to programming and reduce the gender gap",
      "abstract": "Science, Technology, Engineering and Mathematics (STEM) is what our society needs to focus on if it wants to be competitive in the future. But in order to succeed with that, it also needs to let kids discover the best career for them without influences from gender stereotypes. In tech we will be missing out almost 50% of our potential unless we start encouraging girls to choose a tech career. \nWe will share why and how we organize an event we call Hackdays4Girls and what will enable you to awake your daughters (and sons) enthusiasm for tech & coding. You will learn what to take care of if you want to encourage also other girls from within your JUG, company or your child's school. We will take a look at block-programming with Scratch, as well as microcontrollers such as the BBC Micro:bit.\n",
      "type": "talk",
      "tags": [
        "Girls",
        "Programming",
        "Learning",
        "Java User Group"
      ],
      "level": "beginner",
      "speakers": [
        "27a9df1b0b29d676d6c2cd7c00880eb81d60b1d1",
        "36bd706bf1436fb7ecef25ec7e00051bdcce12d3"
      ],
      "scheduleId":"#MON-TC2-SE7"
    },
    {
      "id": "5caa632138da161235721c46",
      "title": "OpenJDK: The future of Java",
      "abstract": "OpenJDK is a healthy and prosperous project that is, since at least Java 7, the reference implementation for the Java Platform.\nThere is a large and substantial participation from the Community contributing features, ideas and governance: from satellite members like AdoptOpenJDK that provide invaluable testing infrastructure at an extremely low entry barrier, to companies like Red Hat, Azul, Google and SAP, IBM and others that contribute various fixes and features.  Some of those contributions have long reaching goals such as continued long-term maintenance, enhancements on language features like Project Valhalla and the value types support, and more.  Others have significant immediate effects on the runtime, like Shenandoah and Epsilon GC, the PPC64/S390 ports and the Native Memory Tracker.  In this presentation we will delve into the various features that are added by the Community of developers working on the Java platform, and we will introduce some ideas that while not yet part of any core project are being researched with the help of the OpenJDK Community, like Check Point Restore support. Finally we will discuss the Governance and the process to become an active contributor to move Java forward and share its future.",
      "type": "talk",
      "tags": [
        "JVM langs",
        "Cloud",
        "design",
        "Microservices"
      ],
      "level": "beginner",
      "speakers": [
        "55fa365305bcd20ac6221f7f3123d50516ee9b35"
      ],
      "scheduleId":"#MON-TC4-SE6"
    },
    {
      "id": "5caa61e838da161235721c44",
      "title": "Hands-on-lab: Hands-on With Serverless Java",
      "abstract": "Serverless computing is a powerful build and execution modern cloud model, but it is a bit of a misleading name. There are certainly servers, but as an application developer you rely on the cloud provider to manage that infrastructure for you. You may have also heard of this model as \"functions as a service\".\n \n In this session, we will start with a short introduction to Serverless, what it means to Java developers, and why it's important to understand this technology. Pratik will also give us a survey of Serverless options on the Java ecosystem to give you an idea of what is currently available.\n \n And of course, we'll dive in with some coding! We'll write a serverless Java application and do a local and cloud deployment.",
      "type": "workshop",
      "tags": [
        "Java",
        "Serverless",
        "Cloud"
      ],
      "level": "beginner",
      "speakers": [
        "5c8cf21786cae4a337b4c305fe244359243ded67"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5caa658938da161235721c48",
      "title": " Undercover Kotlin: Using Kotlin without tipping your hand",
      "abstract": "One of the many hazards of trying out a new language is the lack of interoperability. A new language often presents the added burden of learning a whole new ecosystem. The designers of Kotlin took special care to make sure Kotlin suffered from this as little as possible. Generally speaking, much of the code written in Kotlin can be consumed from Java programs in complete ignorance. In some cases, we need to provide a little extra help. In this talk we’ll cover how to manage Kotlin/Java interop to make your Kotlin code as seamlessly usable from Java as possible.",
      "type": "talk",
      "tags": [
        "java",
        "kotlin",
        "interoperability"
      ],
      "level": "middle",
      "speakers": [
        "a2438d6cd232ed739133c66038175d69d4a2e654"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5cb8340838da166e7a4e7057",
      "title": "How to win the war against a PHP Legacy Monolith, battle by battle",
      "abstract": "You are drowning in PHP Legacy code (like more than 950K LOC) which is completely coupled, using a deprecated version of an abandoned framework. Nobody wants to get near it, but the company as with all companies needs evolving. This is hard to do with PHP monolith but the show must go on!!!. What do you do?\nThis is the story of how a few ABA English brave developers fought against a big PHP monolith, moving into the microservices ecosystem with Java and Kubernetes. They started learning and applying craftsmanship practices while using a clean architecture and getting into the microfrontend world (spoiler alert: they actually managed to kill the legacy code :wink: )",
      "type": "talk",
      "tags": [
        "Java",
        "microservices",
        "Kubernetes",
        "devOps",
        "refactor",
        "legacy code"
      ],
      "level": "middle",
      "speakers": [
        "338c2b906bada5652f39ac6b7a8f1a3f5cca2287",
        "450c67af219213aa11e69adee286b0c9addd9493"
      ],
      "scheduleId":"#TUE-TC2-SE5"
    },
    {
      "id": "5caa65c638da161235721c4b",
      "title": "Memory footprint of a Java process",
      "abstract": "Does JVM option '-Xmx4g' mean that the process will consume up to 4 GB RAM? Certainly not. What else can take virtual memory and how much of it? The question becomes especially important when running Java in a shared environment or in a container with limited resources. Excessive memory consumption may occur everywhere: from the application code and the libraries to the Java virtual machine and the operating system. While Java memory leaks are usually easy to discover from a heap dump, native memory leaks can be quite confusing. During this session we will discuss what structures contribute to the JVM footprint. We will study the real cases of native memory leaks and explore the tools useful in memory allocation analysis.",
      "type": "talk",
      "tags": [
        "JVM internals",
        "Virtual memory",
        "Profiling",
        "Memory leaks"
      ],
      "level": "advanced",
      "speakers": [
        "7a45fa2c21b19721801a08b478d6cc50dcf02518"
      ],
      "scheduleId":"#TUE-TC3-SE2"
    },
    {
      "id": "5caa5b3038da161235721c43",
      "title": "GraalVM - The polyglot virtual machine for all your programs",
      "abstract": "This talk is about GraalVM, the revolutionary, brand new open source virtual machine that is capable not only of replacing the JVM for Java, Scala or Groovy, but also to run other languages as Ruby, Python, JavaScript/Node, R or C.\nWe will show the main characteristics of GraalVM through practical use cases, including: the Graal compiler, interoperability, native images, profiling, debugging and much more.\n\"One VM to compile them all, and in bytecodes, run them.\" - Jauron, the Lord of the Code",
      "type": "talk",
      "tags": [
        "Java",
        "Graal",
        "GraalVM",
        "Ruby",
        "Python",
        "R",
        "Node",
        "JavaScript",
        "C",
        "LLVM"
      ],
      "level": "middle",
      "speakers": [
        "cd7ae0a837dc938d77c5a4b792b36a02f70eb62f"
      ],
      "scheduleId":"#TUE-TC3-SE3"
    },
    {
      "id": "5c94094e38da165dcdf15ffe",
      "title": "Slicing Monolith into a CQRS / Event sourcing microservice: joys and pains",
      "abstract": "Yeah, we are another company that started with a Monolith, we are not neither the first nor the last ones. Buy when a new project came up with fragile integrations and money involved, a more resilient solution was required.\nThis is the story of the great moments, pains, joys, cries but finally success of going live with an event sourced based solution following the DDD principles, Axon, Spring and Kotlin while struggling to coexist with our monolith. \nIt's our humble effort to share our experience and the results we got using this approach.\n",
      "type": "talk",
      "tags": [
        "Kotlin",
        "CQRS",
        "Event Sourcing",
        "DDD",
        "Event driven",
        "Monolith",
        "Microservices",
        "Testing"
      ],
      "level": "middle",
      "speakers": [
        "6343c3598d8dde1eb2c630b53110513eceeab1e5",
        "e016c06049d4c5a829ee4e26db53623c7bf2ccc2"
      ],
      "scheduleId":"#TUE-TC4-SE3"
    },
    {
      "id": "5cbe17ee38da165ac54cf421",
      "title": "Harry Socket and the Prisonner of Ack-aban, an intro to RSocket",
      "abstract": "In this session, we’ll introduce a new protocol called RSocket, which furthers the ideas behind Reactor and reactive programming on the JVM (Reactive Streams) and make them work across the boundaries of the network.\n\nMultiple semantics, application-level backpressure, load awareness, session resumption… This new kid packs a punch!\n\nThis session will be a lighthearted introduction to this very capable protocol.",
      "type": "talk",
      "tags": [
        "Java",
        "Reactive Programming",
        "RSocket",
        "protocols"
      ],
      "level": "middle",
      "speakers": [
        "ae5106226e9b9b505812aa0b2cdd5809329c9c24"
      ],
      "scheduleId":"#TUE-TC5-SE2"
    },
    {
      "id": "5cbe17e438da165ac54cf420",
      "title": "Launching the Micro Future: Micronaut with GraalVM in Practice",
      "abstract": "Micronaut is a modern, JVM-based full-stack framework for building modular, easily testable microservice and serverless applications. Developed by the creators of the Grails framework and with the support of many Spring developers, who have used their experience in these areas to develop a framework specifically focused on microservices.\n\nUnlike other frameworks, Micronaut does not analyze fields, methods and constructors at runtime by reflection, but already at compilation time, so that the start time and memory consumption of an application no longer depends on its size. Micronaut supports the declarative build of reactive HTTP clients that are implemented at compile time, further reducing memory consumption. Additional features such as non-blocking HTTP servers, easy execution of component tests with automatically started and managed test instances, dependency injection at compile time and the cloud-native approach can be implemented in a wondrously simple way.\n\nWith its relatively flat learning curve, Micronaut makes it as easy as possible to provide RESTful services. Of course, as usual today, also for distributed environments with integrated support of repeats in case of failure, circuit breakers and fallbacks for robust applications.\n\nOracle's newly developed GraalVM will change our view of microservices and cloud capabilities in the Java ecosystem and enable us to compete with native compilations. When Micronaut and GraalVM come together, both architectures can take full advantage of each other, resulting in amazingly efficient applications.\n\nIn my presentation I will give a rough overview and a short introduction to Micronaut on the GraalVM and show during a live coding session how to develop real microservices efficiently in a very short time.",
      "type": "talk",
      "tags": [
        "Micronaut",
        "GraalVM",
        "Microservice",
        "Java",
        "Kotlin"
      ],
      "level": "beginner",
      "speakers": [
        "034100c2dca6f7a15d06273390c11c6aa73949d3"
      ]
    }
  ]
}